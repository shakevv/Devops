name: Build and Push Docker Image to Docker Hub

on:
  push:
    branches:
      - '**'

  pull_request:
    branches:
      - main

env:
  TEST_TAG: ${{ secrets.DOCKER_USERNAME }}/devops:test
  LATEST_TAG: ${{ secrets.DOCKER_USERNAME }}/devops:latest

jobs:

  snyk-dependencies-vulnerability-scan-and-sast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:  
          python-version: 3.12

      - name: Upgrade Pip
        run: |
          python -m pip install --upgrade pip

      - name: Install Project Dependencies
        run: |
          pip install -r src/requirements.txt

        #scan for dependency vulnerabilities
      - name: Run Snyk test
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test --sarif
          args: --sarif-file-output=snyk_test.sarif

        #sast
      - name: Run Snyk code test
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test --sarif
          args: --sarif-file-output=snyk_code_test.sarif
      
      - name: Create SARIF directory and move SARIF files
        run: |
          mkdir sarif_files &&
          mv snyk_test.sarif snyk_code_test.sarif sarif_files/

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: sarif_files


  code-style-check: 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:  
          python-version: 3.12

      - name: Upgrade Pip
        run: |
          python -m pip install --upgrade pip

      - name: Install Code Style Dependencies
        run: |
          pip3 install flake8

      - name: Run Flake8
        run: flake8 src

      - name: Run Editor Config Checker
        uses: editorconfig-checker/action-editorconfig-checker@main
        #run: editorconfig-checker

      - uses: actions/setup-node@v4
        
      - name: Run Markdown Lint
        run: |
          npm i -g cli-markdown
          md README.md


  unit-testing:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:  
          python-version: 3.12

      - name: Install Project Dependencies
        run: |
          pip install -r src/requirements.txt
      
      - name: Run Unit Tests
        run: |
          python src/app_test.py

          
  docker-push:
    if: github.event.pull_request.merged == true
    needs: [unit-testing, code-style-check]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Test Image Locally
        uses: docker/build-push-action@v5
        with:
          load: true
          tags: ${{ env.TEST_TAG }}

      # - name: Test Image
      #   run: |
      #     docker run --rm --name test_container ${{ env.TEST_TAG }};
      #     docker stop $(docker ps -q);

      - name: Build and push to Dockerhub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.LATEST_TAG }}
